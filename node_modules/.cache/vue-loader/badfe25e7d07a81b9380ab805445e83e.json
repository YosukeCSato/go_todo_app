{"remainingRequest":"/Users/ythe/.anyenv/envs/nodenv/versions/12.2.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ythe/Projects/go_todo_app/views/vueProduct.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/ythe/Projects/go_todo_app/views/vueProduct.vue","mtime":1584879125613},{"path":"/Users/ythe/.anyenv/envs/nodenv/versions/12.2.0/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ythe/.anyenv/envs/nodenv/versions/12.2.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      products: [],\n      productName: '',\n      productMemo: '',\n      current: -1,\n      options: [\n        { value: -1, label: 'すべて' },\n        { value: 0, label: '未購入' },\n        { value: 1, label: '購入済み' },\n      ],\n      isEntered: false,\n    };\n  },\n\n  computed: {\n    labels() {\n      return this.options.reduce(function(a, b) {\n        return Object.assign(a, { [b.value]: b.label });\n      }, {});\n    },\n\n    computedProducts() {\n      return this.products.filter(function(el) {\n        var option = this.current < 0 ? true : this.current === el.state;\n        return option;\n      }, this);\n    },\n\n    validate() {\n      var isEnteredProductName = 0 < this.productName.length;\n      this.isEntered = isEnteredProductName;\n      return isEnteredProductName;\n    },\n  },\n\n  created() {\n    this.doFetchAllProducts();\n  },\n\n  methods: {\n    doFetchAllProducts() {\n      axios.get('http://localhost:8080/fetchAllProducts').then(response => {\n        if (response.status != 200) {\n          throw new Error('レスポンスエラー');\n        } else {\n          var resultProducts = response.data;\n          this.products = resultProducts;\n        }\n      });\n    },\n  },\n};\n",{"version":3,"sources":["vueProduct.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vueProduct.vue","sourceRoot":"views","sourcesContent":["<template>\n  <div>\n    <label v-for=\"label in options\" :key=\"label\">\n      <input type=\"radio\" v-model=\"current\" v-bind:value=\"label.value\" />{{\n        label.label\n      }}\n    </label>\n    <p>\n      品名:<input\n        type=\"text\"\n        name=\"productName\"\n        v-model=\"productName\"\n        placeholder=\"品名を入力してください\"\n      />\n    </p>\n    <p>\n      メモ:<input\n        type=\"text\"\n        name=\"productMemo\"\n        v-model=\"productMemo\"\n        placeholder=\"品名を入力してください\"\n      />\n    </p>\n\n    <button v-on:click=\"doAddProduct\" v-bind:disabled=\"!isEntered\">追加</button>\n    <hr />\n    <table>\n      <thead v-pre>\n        <tr>\n          <th>No</th>\n          <th>商品名</th>\n          <th>メモ</th>\n          <th>状態</th>\n          <th>削除</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(item, index) in computedProducts\" :key=\"item\">\n          <td>{{ index + 1 }}</td>\n          <td>{{ item.name }}</td>\n          <td>{{ item.memo }}</td>\n          <td>\n            <button v-on:click=\"doChangeProductState(item)\">\n              {{ labels[item.state] }}\n            </button>\n          </td>\n          <td>\n            <button v-on:click=\"doDeleteProduct(item)\">\n              削除\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      products: [],\n      productName: '',\n      productMemo: '',\n      current: -1,\n      options: [\n        { value: -1, label: 'すべて' },\n        { value: 0, label: '未購入' },\n        { value: 1, label: '購入済み' },\n      ],\n      isEntered: false,\n    };\n  },\n\n  computed: {\n    labels() {\n      return this.options.reduce(function(a, b) {\n        return Object.assign(a, { [b.value]: b.label });\n      }, {});\n    },\n\n    computedProducts() {\n      return this.products.filter(function(el) {\n        var option = this.current < 0 ? true : this.current === el.state;\n        return option;\n      }, this);\n    },\n\n    validate() {\n      var isEnteredProductName = 0 < this.productName.length;\n      this.isEntered = isEnteredProductName;\n      return isEnteredProductName;\n    },\n  },\n\n  created() {\n    this.doFetchAllProducts();\n  },\n\n  methods: {\n    doFetchAllProducts() {\n      axios.get('http://localhost:8080/fetchAllProducts').then(response => {\n        if (response.status != 200) {\n          throw new Error('レスポンスエラー');\n        } else {\n          var resultProducts = response.data;\n          this.products = resultProducts;\n        }\n      });\n    },\n  },\n};\n</script>\n"]}]}